{"filter":false,"title":"activeadmin-async_panel.js","tooltip":"/app/assets/javascripts/activeadmin-async_panel.js","undoManager":{"mark":1,"position":1,"stack":[[{"start":{"row":0,"column":0},"end":{"row":39,"column":12},"action":"insert","lines":["# To use this stuff do next steps:","","# 1. Define async panel","# if you setup 'data-period' panel will be periodically updated if not it will be loaded once after page load","#   panel 'Name', class: 'async-panel', 'data-url' => path_helper, 'data-period' => 1.minute","","# 2. Define member_action or collection action to handle request specified by path_helper","#   collection_action do","#     @resources = SomeResource.some_scope","#     render layout: false # mandatory line, layout should be disaled to render template only","#   end","","# 3. Define you view template to render action above in file views/resource_names/action_name.html.arb (slim, erb)","#   table_for resources do","#     column :value1","#     column :calue2","#   end","","$ ->","  $('.async-panel').each (index, item) ->","    item = $(item)","    worker = ->","      item.addClass('processing')","      $('h3', item).hide().show(0)","","      $.ajax","        url: item.data('url')","        success: (data) ->","          $('.panel_contents', item).html(data)","        error: (data, status, error) ->","          $('.panel_contents', item).html(error)","        complete: ->","          item.removeClass('processing')","","          # Schedule the next request when the current one's completed","          period = item.data('period')","          if period","            setTimeout worker, period * 1000","","    worker()"],"id":1}],[{"start":{"row":20,"column":18},"end":{"row":21,"column":0},"action":"insert","lines":["",""],"id":2},{"start":{"row":21,"column":0},"end":{"row":21,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":116,"column":30},"end":{"row":116,"column":40},"action":"remove","lines":["pluginName"],"id":19},{"start":{"row":116,"column":30},"end":{"row":116,"column":40},"action":"insert","lines":["asyncPanel"]}],[{"start":{"row":115,"column":33},"end":{"row":115,"column":43},"action":"remove","lines":["pluginName"],"id":18},{"start":{"row":115,"column":33},"end":{"row":115,"column":43},"action":"insert","lines":["asyncPanel"]}],[{"start":{"row":114,"column":33},"end":{"row":114,"column":43},"action":"remove","lines":["pluginName"],"id":17},{"start":{"row":114,"column":33},"end":{"row":114,"column":43},"action":"insert","lines":["asyncPanel"]}],[{"start":{"row":109,"column":35},"end":{"row":109,"column":45},"action":"remove","lines":["pluginName"],"id":16},{"start":{"row":109,"column":35},"end":{"row":109,"column":45},"action":"insert","lines":["asyncPanel"]}],[{"start":{"row":105,"column":43},"end":{"row":105,"column":53},"action":"remove","lines":["pluginName"],"id":15},{"start":{"row":105,"column":43},"end":{"row":105,"column":53},"action":"insert","lines":["asyncPanel"]}],[{"start":{"row":99,"column":9},"end":{"row":99,"column":19},"action":"remove","lines":["pluginName"],"id":14},{"start":{"row":99,"column":9},"end":{"row":99,"column":19},"action":"insert","lines":["asyncPanel"]}],[{"start":{"row":71,"column":25},"end":{"row":71,"column":35},"action":"remove","lines":["pluginName"],"id":13},{"start":{"row":71,"column":25},"end":{"row":71,"column":35},"action":"insert","lines":["asyncPanel"]}],[{"start":{"row":50,"column":25},"end":{"row":50,"column":35},"action":"remove","lines":["pluginName"],"id":12},{"start":{"row":50,"column":25},"end":{"row":50,"column":35},"action":"insert","lines":["asyncPanel"]}],[{"start":{"row":27,"column":6},"end":{"row":27,"column":16},"action":"remove","lines":["pluginName"],"id":11},{"start":{"row":27,"column":6},"end":{"row":27,"column":16},"action":"insert","lines":["asyncPanel"]}],[{"start":{"row":23,"column":41},"end":{"row":23,"column":51},"action":"remove","lines":["pluginName"],"id":10},{"start":{"row":23,"column":41},"end":{"row":23,"column":51},"action":"insert","lines":["asyncPanel"]}],[{"start":{"row":18,"column":0},"end":{"row":124,"column":11},"action":"insert","lines":["// jQuery Plugin Boilerplate","// A boilerplate for jumpstarting jQuery plugins development","// version 1.1, May 14th, 2011","// by Stefan Gabos","","// remember to change every instance of \"pluginName\" to the name of your plugin!","(function($) {","","    // here we go!","    $.pluginName = function(element, options) {","","        // plugin's default options","        // this is private property and is  accessible only from inside the plugin","        var defaults = {","","            foo: 'bar',","","            // if your plugin is event-driven, you may provide callback capabilities","            // for its events. execute these functions before or after events of your ","            // plugin, so that users may customize those particular events without ","            // changing the plugin's code","            onFoo: function() {}","","        }","","        // to avoid confusions, use \"plugin\" to reference the ","        // current instance of the object","        var plugin = this;","","        // this will hold the merged default, and user-provided options","        // plugin's properties will be available through this object like:","        // plugin.settings.propertyName from inside the plugin or","        // element.data('pluginName').settings.propertyName from outside the plugin, ","        // where \"element\" is the element the plugin is attached to;","        plugin.settings = {}","","        var $element = $(element), // reference to the jQuery version of DOM element","             element = element;    // reference to the actual DOM element","","        // the \"constructor\" method that gets called when the object is created","        plugin.init = function() {","","            // the plugin's final properties are the merged default and ","            // user-provided options (if any)","            plugin.settings = $.extend({}, defaults, options);","","            // code goes here","","        }","","        // public methods","        // these methods can be called like:","        // plugin.methodName(arg1, arg2, ... argn) from inside the plugin or","        // element.data('pluginName').publicMethod(arg1, arg2, ... argn) from outside ","        // the plugin, where \"element\" is the element the plugin is attached to;","","        // a public method. for demonstration purposes only - remove it!","        plugin.foo_public_method = function() {","","            // code goes here","","        }","","        // private methods","        // these methods can be called only from inside the plugin like:","        // methodName(arg1, arg2, ... argn)","","        // a private method. for demonstration purposes only - remove it!","        var foo_private_method = function() {","","            // code goes here","","        }","","        // fire up the plugin!","        // call the \"constructor\" method","        plugin.init();","","    }","","    // add the plugin to the jQuery.fn object","    $.fn.pluginName = function(options) {","","        // iterate through the DOM elements we are attaching the plugin to","        return this.each(function() {","","            // if plugin has not already been attached to the element","            if (undefined == $(this).data('pluginName')) {","","                // create a new instance of the plugin","                // pass the DOM element and the user-provided options as arguments","                var plugin = new $.pluginName(this, options);","","                // in the jQuery version of the element","                // store a reference to the plugin object","                // you can later access the plugin and its methods and properties like","                // element.data('pluginName').publicMethod(arg1, arg2, ... argn) or","                // element.data('pluginName').settings.propertyName","                $(this).data('pluginName', plugin);","","            }","","        });","","    }","","})(jQuery);"],"id":9}],[{"start":{"row":17,"column":0},"end":{"row":18,"column":0},"action":"insert","lines":["",""],"id":8},{"start":{"row":18,"column":0},"end":{"row":19,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":21,"column":0},"end":{"row":22,"column":0},"action":"remove","lines":["    alert('hhh')",""],"id":7}],[{"start":{"row":21,"column":15},"end":{"row":21,"column":16},"action":"insert","lines":[")"],"id":6}],[{"start":{"row":21,"column":12},"end":{"row":21,"column":13},"action":"insert","lines":["h"],"id":5},{"start":{"row":21,"column":13},"end":{"row":21,"column":14},"action":"insert","lines":["h"]},{"start":{"row":21,"column":14},"end":{"row":21,"column":15},"action":"insert","lines":["'"]}],[{"start":{"row":21,"column":10},"end":{"row":21,"column":11},"action":"insert","lines":["'"],"id":4},{"start":{"row":21,"column":11},"end":{"row":21,"column":12},"action":"insert","lines":["h"]}],[{"start":{"row":21,"column":4},"end":{"row":21,"column":5},"action":"insert","lines":["a"],"id":3},{"start":{"row":21,"column":5},"end":{"row":21,"column":6},"action":"insert","lines":["l"]},{"start":{"row":21,"column":6},"end":{"row":21,"column":7},"action":"insert","lines":["e"]},{"start":{"row":21,"column":7},"end":{"row":21,"column":8},"action":"insert","lines":["r"]},{"start":{"row":21,"column":8},"end":{"row":21,"column":9},"action":"insert","lines":["t"]},{"start":{"row":21,"column":9},"end":{"row":21,"column":10},"action":"insert","lines":["("]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":21,"column":4},"end":{"row":21,"column":4},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1538113968325,"hash":"2ec485f5e88acfd5c67105f11d798119d595bfc5"}